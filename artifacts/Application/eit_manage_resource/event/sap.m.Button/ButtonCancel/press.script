function generateUUID() {
  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
    const r = Math.random() * 16 | 0;
    const v = c === 'x' ? r : (r & 0x3 | 0x8);
    return v.toString(16);
  });
}

if(oDatePickerTDDateFrom.getValue() == ""){
   sap.m.MessageToast.show("Dates can not be empty");
   oDatePickerTDDateFrom.setValueState("Warning");
   return;
}
if(oDatePickerTDDateTo.getValue() == ""){
   sap.m.MessageToast.show("Dates can not be empty");
   oDatePickerTDDateTo.setValueState("Warning");
   return;
}
if(oInputTDLocation.getValue() == ""){
   sap.m.MessageToast.show("Location can not be empty");
   oInputTDLocation.setValueState("Warning");
   return;
}
if(oInputTDReason.getValue() == ""){
   sap.m.MessageToast.show("Reason can not be empty");
   oInputTDReason.setValueState("Warning");
   return;
}
if(InputCountry.getValue() == ""){
   sap.m.MessageToast.show("Country can not be empty");
   InputCountry.setValueState("Warning");
   return;
}
if(InputActivity.getValue() == ""){
   sap.m.MessageToast.show("Activity can not be empty");
   InputActivity.setValueState("Warning");
   return;
}

// const myUUID = generateUUID();
const myUUID = TextID.getText();
var dateObjectFrom = new Date(oDatePickerTDDateFrom.getDateValue());
var dateObjectTo = new Date(oDatePickerTDDateTo.getDateValue());

var options = {
    data: {
        "From": dateObjectFrom,
        "To": dateObjectTo,
        "Location": oInputTDLocation.getValue(),
        "Reason": oInputTDReason.getValue(),
        "Country": InputCountry.getValue(),
        "Activity": InputActivity.getValue(),
        "Comments": TextAreaComments.getValue(),
        "Uniqe_id": myUUID,
        "status": "Draft" ,
    }
};

apiRestAPIPostExpense(options);



// Use this script in your App or from external systems
var wfData = {
   "id": "2BF35F2D-E82E-EE11-907E-000D3A661202",
   "Uniqe_id": myUUID,
   "objectKey": myUUID,
   "objectType": "Travel Expense",
   "amount": "1000",
   "currency": "EUR",
   "approver": ""
}




// debugger;
$.ajax({
    type: "POST",
    contentType: "application/json",
    url: "/api/functions/WorkflowInbox/Start", // Remember full path if triggered externally
    headers: { // Needed when triggered externally
        "Authorization": "Basic xxxx ", // Or use Bearer + token (JWT from user)
        "X-Requested-With": "XMLHttpRequest",
    },
    data: JSON.stringify(wfData),
    success: function(data) {
      //  alert("hey");
    },
    error: function(result, status) {
      alert("error");
    }
});

























